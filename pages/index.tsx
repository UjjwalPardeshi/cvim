import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';

const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
        {/* CSS for parallax effect */}
        <style>
          {`
            body, html {
              height: 100%;
              margin: 0;
            }
            .parallax {
              /* The image used */
              background-image: url('your-background-image.jpg');
              /* Full height */
              height: 100%;
              /* Create the parallax scrolling effect */
              background-attachment: fixed;
              background-position: center;
              background-repeat: no-repeat;
              background-size: cover;
            }
          `}
        </style>
      </Head>

      {/* Add parallax class to main */}
      <main className={`${styles.main} parallax`}>
        <ConnectButton />

        <h1 className={styles.title}>
          Welcome to C-VIM
        </h1>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
  );
};
const handleTransaction = async () => {
  const amount = document.getElementById("amountInput").value;
  // ... other user input if needed

  try {
    const tx = await rainbowKit.contracts.executeFunction(contractAddress, "yourTransactionFunction", [amount]);
    console.log("Transaction submitted:", tx.hash);
  } catch (error) {
    console.error("Transaction failed:", error);
  }
};

export default Home;

